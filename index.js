// —Ç–æ–∫–µ–Ω –±–µ—Ä–µ–º —Å .env —Ñ–∞–π–ª–∞
require('dotenv').config()
const token = process.env.BOT_TOKEN

// –∞–ø–∏—à–∫–∞ –¢–µ–ª–µ–≥—Ä–∞–º
const TelegramApi = require('node-telegram-bot-api')

// —Å–æ–∑–¥–∞–µ–º –±–æ—Ç–∞, –¥–µ–ª–∞—è –µ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—ã(—Ç–æ–∫–µ–Ω –∏ –ø—Ä–æ—á–∞—è —Ö—É–π–Ω—è –∫–∞—Ä–æ—á–µ —Å—ã—Ä –∑–∞–ª—É–ø–∞)
const bot = new TelegramApi(token, {polling: true})

// ID –∫–∞–Ω–∞–ª–∞
CHANNEL_ID = '-1003074067217'

// —Ç—É—Ç –∫–æ—Ä–æ—á —Ç–µ–º–∫–∞ —à–æ–± –∫–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞–ª –∫–Ω–æ–ø–∫—É –≤–æ–∑–ª–µ —á–∞—Ç–∞ –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø —É–¥–æ–±–Ω–æ –∫–æ—Ä–æ—á
bot.setMyCommands([
    {command: '/start', description: '–Ω–∞—á–∞–ª–æ'},
    {command: '/account', description: '–º–æ–π –∞–∫–∫–∞—É–Ω—Ç'},
    {command: '/balance', description: '–±–∞–ª–∏–∫'},
    {command: '/ref', description: '—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞'},
    {command: '/help', description: '—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥'},
    {command: '/cheese', description: '–ø–æ–∫–∞–∑–∞—Ç—å —Å—ã—Ä—ã (–±–æ–Ω—É—Å—ã)'}
])
console.log('bot running...')

// –æ–±—ä–µ–∫—Ç —Å —é–∑–µ—Ä–∞–º–∏
const userData = {} // *–¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã —é–∑–µ—Ä–∞(–≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)

// —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–ø—á–∏
function captcha() {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'
    let captchaResult = ''
    for (let i = 0; i < 6; i++) {
        captchaResult += chars[Math.floor(Math.random() * chars.length)]
    }
    return captchaResult
}

// –æ–±–Ω–æ–≤–∞ || —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç –º—É—Å–æ—Ä–∞
function referalSystem (userFrom, txt, userDb) {
    const parts = txt.split(' ')
    const refId = parts[1]
    if (refId && refId !== String(userFrom) && !userDb.invitedBy) {
        userDb.invitedBy = refId
        return true // –∑–∞—á–∏—Å–ª—è–µ–º —Å—ã—Ä—ã
    }
    return false // –Ω–µ –∑–∞—á–∏—Å–ª—è–µ–º –ø–æ—à–µ–ª –æ–Ω –Ω–∞—Ö—É–π —É–µ–±–æ–∫ –±–ª—è
}


// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—è –≤—ã–Ω–µ—Å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞—Ä—Ç)
bot.on('message', async msg => {
    // –≤—Å–µ —à–æ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –∫ —é–∑–µ—Ä—É
    const chatId = msg.chat.id
    const userId = msg.from.id
    const text = msg.text
    // *—à–∞–±–ª–æ–Ω–Ω–∞—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —é–∑–µ—Ä–∞
    if (!userData[userId]) {
        userData[userId] = {
            userCaptcha: undefined, 
            // —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–∞–ø—á–∞
            captchaAttempts: 4,     
            // –ø–æ–ø—ã—Ç–∫–∏ –∫–∞–ø—á–∏
            chancesLeft: 3,         
            // —à–∞–Ω—Å—ã (–∫–∞–∂–¥—ã–π —à–∞–Ω—Å = 3 –ø–æ–ø—ã—Ç–∫–∏)
            balance: 0,             
            // –≥–æ–ª–¥–∞
            cheese: 0,              
            // –±–æ–Ω—É—Å–Ω—ã–µ —Å—ã—Ä—ã
            whitelist: false,       
            // –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫
            verifiedUsers: false,   
            // –ø—Ä–æ—à—ë–ª –∫–∞–ø—á—É
            banned: false,          
            // –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞
            banUntil: undefined,    
            // —Ç–∞–π–º–µ—Ä –±–∞–Ω–∞
            invitedBy: undefined,
            // –∫—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª
            getCheeseRefBonus: false
        }
    }
    // —Å–∫–æ—Ä–æ—á–µ–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    const u = userData[userId]
    // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–π–¥–∏ –¥–ª—è —Ç–æ–≥–æ –∫—Ç–æ –∫–∏–Ω—É–ª —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É
    const inviterId = u.invitedBy

    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—á–Ω–æ–≥–æ –±–∞–Ω–∞
    if (u.banned) {
        await bot.sendMessage(chatId, '–¥–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç –Ω–∞–≤—Å–µ–≥–¥–∞, —Ç—ã –≤—ã—Å—Ä–∞–ª –≤—Å–µ —à–∞–Ω—Å—ã –Ω–∞ –∫–∞–ø—á–µ')
        return
    }

    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω-—Ç–∞–π–º–µ—Ä–∞
    if (u.banUntil && Date.now() < u.banUntil) {
        const mins = Math.ceil((u.banUntil - Date.now()) / 60000)
        await bot.sendMessage(chatId, `‚åõ –æ—Ç–¥—ã—Ö–∞–π –µ—â—ë ${mins}–º–∏–Ω –∏ –ø—Ä–∏—Ö–æ–¥–∏ –ø–æ /start`)
        return
    } else if (u.banUntil && Date.now() >= u.banUntil) delete u.banUntil


    // –æ–±–Ω–æ–≤–∏–ª –∏ —Å–¥–µ–ª–∞–ª —Ç–∞–∫ —á—Ç–æ–±—ã —á–µ–∫–∞–ª–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Ç–∞–∫–∂–µ
    if (text.startsWith('/start')) {
        // —á–µ–∫–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É
        referalSystem(userId, text, u)

        if (!u.verifiedUsers) {
            if (u.chancesLeft <= 0) {
                u.banned = true
                await bot.sendMessage(chatId, ' —Ç—ã –≤—ã—Å—Ä–∞–ª –≤—Å–µ —à–∞–Ω—Å—ã, –¥–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç –Ω–∞–≤—Å–µ–≥–¥–∞')
                return
            }
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–ø—á—É
            const sendCaptcha = captcha()
            u.userCaptcha = sendCaptcha
            await bot.sendMessage(chatId, '—à–æ —Ç—ã –ª—ã—Å—ã–πüßÄüòÇ, –ø—Ä–æ–π–¥–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –±–æ—Ç–∞ \n\n‚å®Ô∏è –≤–≤–µ–¥–∏ —Ç–æ —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å:\n\n' + sendCaptcha)
            return
        }

        bot.sendMessage(chatId, '–∫–æ—Ä–æ—á–µ —Ç—É—Ç –Ω–∞–¥–æ –±—É–¥–µ—Ç —Ç–∏–ø–æ –∑–∞–ø—É—Å–∫ –≤–ø–Ω –∏ —Ç–∞—Ä–∏—Ñ—ã –ø–æ–¥–ø–∏—Å–∫–∏')
        return
    }

    // –±–ª—è –µ–≥–æ—Ä –∫—Ä–∞—Å–∞–≤–∞ —è—è –¥–∞–ª–±–∞–µ–µ–µ–± –Ω–µ–¥–æ–¥—É–º–∞–ª—Å—è –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ç–∞–∫ –ª–µ–≥—á–µ
    console.log(u)

    switch (text) {
        case '/account':
            await bot.sendMessage(chatId,
                `üè¶ –¢–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç , ${msg.from.first_name}üßÄ \n\n` +
                `üí≥ –±–∞–ª–∞–Ω—Å: ${u.balance} ‚ÇΩ\n` +
                `üßÄ –±–æ–Ω—É—Å—ã (—Å—ã—Ä—ã): üßÄ${u.cheese}\n` +
                `üìÑ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ: ${u.whitelist ? 'üîí–¥–∞' : 'üîì –Ω–µ—Ç'}\n` +
                `ü§ñ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞: ${u.verifiedUsers ? '‚úÖ –ø—Ä–æ–π–¥–µ–Ω–æ' : '‚ùå –æ—à–∏–±–∫–∞'}`
            )
            break

        case '/balance':
            await bot.sendMessage(chatId, `üí∞ —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å: ${u.balance} ‚ÇΩ`)
            break

        case '/help':
            await bot.sendMessage(chatId,
                'üìñ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n' +
                '/start ‚Äì –∑–∞–ø—É—Å–∫\n' +
                '/account ‚Äì –º–æ–π –∞–∫–∫–∞—É–Ω—Ç\n' +
                '/balance - –≥–æ–ª–¥–∞ –Ω–∞ –±–∞–ª–∏–∫–µ\n' +
                '/cheese ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –±–æ–Ω—É—Å—ã (—Å—ã—Ä—ã)\n' +
                '/ref ‚Äì —Ç–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞\n' +
                '/help ‚Äì –ø–æ–º–æ—â—å\n'
            )
            break

        case '/cheese':
            await bot.sendMessage(chatId, `üßÄ —É —Ç–µ–±—è –Ω–∞ —Å—á–µ—Ç—É: ${u.cheese} üßÄ –±–æ–Ω—É—Å–Ω—ã—Ö —Å—ã—Ä–æ–≤!`)
            break

        case '/ref':
            await bot.sendMessage(chatId, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å—ãüßÄ!:', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            // —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞ –∫–Ω–æ–ø–∫–∞
                            {
                                text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π üßÄ‚úâÔ∏è',
                                switch_inline_query: ''
                            }
                        ]
                    ]
                }
            })
            break
        default:
            // –µ—Å–ª–∏ —é–∑–µ—Ä –µ—â—ë –Ω–µ –ø—Ä–æ—à—ë–ª –∫–∞–ø—á—É –∏ –æ–Ω–∞ —É –Ω–µ–≥–æ –µ—Å—Ç—å
            if (!u.verifiedUsers && u.userCaptcha) {
                if (text === u.userCaptcha) {
                    // —Ç–∞ —Å–∞–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ—à–µ–ª –∫—Ç–æ —Ç–æ –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ –Ω–µ—Ç, —Ç—ã —Ç–∞–∫–æ–µ –ø–∏—Å–∞–ª —É–∂–µ —Ç–∞–∫ —à–æ –¥–æ–ª–∂–µ–Ω –ø–æ–Ω—è—Ç—å —à–æ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞–ø–∏—à–∏ —Å—ã—Ä –µ–±–∞–Ω—ã–π
                    if (inviterId && userData[inviterId] && !u.getCheeseRefBonus) {
                        userData[inviterId].cheese += 10

                        await bot.sendMessage(inviterId, `–ü–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç—ã –ø–æ–ª—É—á–∏–ª 10 —Å—ã—Ä–∞!\n` +
                        `—Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è: ${userData[inviterId].cheese} –µ–¥–∏–Ω–∏—Ü —Å—ã—Ä–∞!`)
                        u.getCheeseRefBonus = true
                    }

                    // —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
                    await bot.sendMessage(chatId, '‚úÖ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É".', {
                        reply_markup: {
                            inline_keyboard: [
                                [
                                    {text: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'check'},
                                    {text: '–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url: 'https://t.me/cheessechanel'}
                                ]
                            ]
                        }
                    }
                    )
                     // –æ—á–∏—â–∞–µ–º –Ω–∞—Ö –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    u.verifiedUsers = true
                    delete u.userCaptcha
                    delete u.captchaAttempts
                    delete u.chancesLeft
                    delete u.banUntil
                    delete u.banned

                    // —É–¥–∞–ª—è–µ–º –Ω–∞—Ö—É–π –∫–Ω–æ–ø–∫—É —Ç—É —Å–∞–º—É—é
                    bot.once('callback_query', async (query) => {
                        if (query.data === 'check' && query.from.id === userId) {
                            await bot.editMessageReplyMarkup(
                                {inline_keyboard: []},
                                {
                                chat_id: chatId,
                                message_id: query.message.message_id
                            }
                        )
                        }
                    })
                } else {
                    if (u.captchaAttempts > 0) {
                        u.captchaAttempts--
                        await bot.sendMessage(chatId, `–≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: ‚ùó ${u.captchaAttempts} ‚ùó`)

                        if (u.captchaAttempts === 0) {
                            u.chancesLeft--
                            if (u.chancesLeft <= 0) {
                                u.banned = true
                                await bot.sendMessage(chatId, ' —Ç—ã –≤—ã—Å—Ä–∞–ª –≤—Å–µ —à–∞–Ω—Å—ã (3 –∏–∑ 3), –¥–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç –Ω–∞–≤—Å–µ–≥–¥–∞ ')
                                return
                            }
                            u.banUntil = Date.now() + 2 * 60 * 1000
                            u.captchaAttempts = 4
                            delete u.userCaptcha
                            await bot.sendMessage(chatId, `—Ç—ã –ø—Ä–æ–µ–±–∞–ª 3 –ø–æ–ø—ã—Ç–∫–∏. –æ—Å—Ç–∞–ª–æ—Å—å —à–∞–Ω—Å–æ–≤: ${u.chancesLeft}. –∂–¥–∏ 2 –º–∏–Ω –∏ –ø—Ä–∏—Ö–æ–¥–∏ —Å–Ω–æ–≤–∞ –ø–æ /start`)
                            return
                        }
                    }
                }
            }
    }
})
// 
bot.on('callback_query', async (query) => {      
    const cbUserId = query.from.id
    const data = query.data
    const u = userData[cbUserId]
    if (!u || (!u.verifiedUsers && data !== 'check')) return 
    if (data === 'check') {
        const requestMember = await bot.getChatMember(CHANNEL_ID, cbUserId)
        if(['member', 'administrator', 'creator'].includes(requestMember.status)) {
            await bot.sendMessage(cbUserId, '‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 5 —Å—ã—Ä–æ–≤!')
            u.cheese += 5
        } else {
            await bot.sendMessage(cbUserId, '‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å—ãüò≠')
        }
    }
})

// –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
bot.on('inline_query', async (query) => {
    const referalLink = `https://t.me/orangeCheesyBot?start=${query.from.id}`
    const messageRequest = `–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –±–æ—Ç–∞ –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π! –ü—Ä–∏—Å–æ–µ–¥–µ–Ω—è–π—Å—è: ${referalLink}`
    const results = [
        {
            type: 'article',
            id: 'share_ref',
            title: '‚úâÔ∏è–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—ã—Ä–Ω—ã–º –±–æ—Ç–æ–ºüßÄ',
            input_message_content: {
                message_text: messageRequest
            }
        }
    ]
    bot.answerInlineQuery(query.id, results)
})

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', console.error)
